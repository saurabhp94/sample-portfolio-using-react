{"ast":null,"code":"\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    bsPrefix,\n    type,\n    size,\n    htmlSize,\n    id,\n    className,\n    isValid = false,\n    isInvalid = false,\n    plaintext,\n    readOnly,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'input',\n    ...props\n  } = _ref;\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, plaintext ? \"\".concat(bsPrefix, \"-plaintext\") : bsPrefix, size && \"\".concat(bsPrefix, \"-\").concat(size), type === 'color' && \"\".concat(bsPrefix, \"-color\"), isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","map":{"version":3,"names":["classNames","React","useContext","warning","Feedback","FormContext","useBootstrapPrefix","jsx","_jsx","FormControl","forwardRef","_ref","ref","bsPrefix","type","size","htmlSize","id","className","isValid","isInvalid","plaintext","readOnly","as","Component","props","controlId","process","env","NODE_ENV","concat","displayName","Object","assign"],"sources":["/Users/saurabhpatel/sample-portfolio-using-react/node_modules/react-bootstrap/esm/FormControl.js"],"sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, plaintext ? `${bsPrefix}-plaintext` : bsPrefix, size && `${bsPrefix}-${size}`, type === 'color' && `${bsPrefix}-color`, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});"],"mappings":"AAAA,YAAY;;AAEZ,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,OAAO;AAClC,OAAOC,OAAO,MAAM,SAAS;AAC7B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,kBAAkB,QAAQ,iBAAiB;AACpD,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,MAAMC,WAAW,GAAG,aAAaR,KAAK,CAACS,UAAU,CAAC,CAAAC,IAAA,EAc/CC,GAAG,KAAK;EAAA,IAdwC;IACjDC,QAAQ;IACRC,IAAI;IACJC,IAAI;IACJC,QAAQ;IACRC,EAAE;IACFC,SAAS;IACTC,OAAO,GAAG,KAAK;IACfC,SAAS,GAAG,KAAK;IACjBC,SAAS;IACTC,QAAQ;IACR;IACAC,EAAE,EAAEC,SAAS,GAAG,OAAO;IACvB,GAAGC;EACL,CAAC,GAAAd,IAAA;EACC,MAAM;IACJe;EACF,CAAC,GAAGxB,UAAU,CAACG,WAAW,CAAC;EAC3BQ,QAAQ,GAAGP,kBAAkB,CAACO,QAAQ,EAAE,cAAc,CAAC;EACvDc,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG1B,OAAO,CAACuB,SAAS,IAAI,IAAI,IAAI,CAACT,EAAE,EAAE,mEAAmE,CAAC,GAAG,KAAK,CAAC;EACvJ,OAAO,aAAaT,IAAI,CAACgB,SAAS,EAAE;IAClC,GAAGC,KAAK;IACRX,IAAI,EAAEA,IAAI;IACVC,IAAI,EAAEC,QAAQ;IACdJ,GAAG,EAAEA,GAAG;IACRU,QAAQ,EAAEA,QAAQ;IAClBL,EAAE,EAAEA,EAAE,IAAIS,SAAS;IACnBR,SAAS,EAAElB,UAAU,CAACkB,SAAS,EAAEG,SAAS,MAAAS,MAAA,CAAMjB,QAAQ,kBAAeA,QAAQ,EAAEE,IAAI,OAAAe,MAAA,CAAOjB,QAAQ,OAAAiB,MAAA,CAAIf,IAAI,CAAE,EAAED,IAAI,KAAK,OAAO,OAAAgB,MAAA,CAAOjB,QAAQ,WAAQ,EAAEM,OAAO,IAAI,UAAU,EAAEC,SAAS,IAAI,YAAY;EAC3M,CAAC,CAAC;AACJ,CAAC,CAAC;AACFX,WAAW,CAACsB,WAAW,GAAG,aAAa;AACvC,eAAeC,MAAM,CAACC,MAAM,CAACxB,WAAW,EAAE;EACxCL;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}