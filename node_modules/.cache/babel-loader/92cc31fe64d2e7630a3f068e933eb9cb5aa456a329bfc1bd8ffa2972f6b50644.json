{"ast":null,"code":"var _jsxFileName = \"/Users/saurabhpatel/self-learn-react/src/MainApp.jsx\",\n  _s = $RefreshSig$();\nimport NavBar from './components/NavigationBar';\nimport React, { useState, useEffect } from 'react';\nimport FallbackSpinner from './components/FallbackSpinner';\nimport endpoints from './constants/endpoints';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MainApp = () => {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(endpoints.routes, {\n          method: \"GET\"\n        });\n        const res = await response.json();\n        setData(res);\n      } catch (err) {\n        console.error(\"Routes fetch Error\", err);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: data ? {\n        date\n      } : /*#__PURE__*/_jsxDEV(FallbackSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(MainApp, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = MainApp;\nexport default MainApp;\nvar _c;\n$RefreshReg$(_c, \"MainApp\");","map":{"version":3,"names":["NavBar","React","useState","useEffect","FallbackSpinner","endpoints","jsxDEV","_jsxDEV","Fragment","_Fragment","MainApp","_s","data","setData","fetchData","response","fetch","routes","method","res","json","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","date","_c","$RefreshReg$"],"sources":["/Users/saurabhpatel/self-learn-react/src/MainApp.jsx"],"sourcesContent":["import NavBar from './components/NavigationBar';\nimport React, { useState, useEffect } from 'react';\nimport FallbackSpinner from './components/FallbackSpinner';\nimport endpoints from './constants/endpoints';\n\nconst MainApp = () => {\n    const [data, setData] = useState(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await fetch(endpoints.routes, { method: \"GET\" });\n                const res = await response.json();\n                setData(res);\n            } catch (err) {\n                console.error(\"Routes fetch Error\", err);\n            }\n        };\n        fetchData();\n    }, []);\n\n    return (\n        <>\n    <NavBar />\n        <main>\n            {data ? (\n                {date }\n            ) : (\n                <FallbackSpinner />\n            )}\n        </main>\n    </>\n    );\n}\n\nexport default MainApp;"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,SAAS,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACX,SAAS,CAACY,MAAM,EAAE;UAAEC,MAAM,EAAE;QAAM,CAAC,CAAC;QACjE,MAAMC,GAAG,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QACjCP,OAAO,CAACM,GAAG,CAAC;MAChB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEF,GAAG,CAAC;MAC5C;IACJ,CAAC;IACDP,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACJjB,OAAA,CAACP,MAAM;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACNrB,OAAA;MAAAiB,QAAA,EACKZ,IAAI,GACD;QAACiB;MAAK,CAAC,gBAEPtB,OAAA,CAACH,eAAe;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IACrB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,eACT,CAAC;AAEP,CAAC;AAAAjB,EAAA,CA5BKD,OAAO;AAAAoB,EAAA,GAAPpB,OAAO;AA8Bb,eAAeA,OAAO;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}