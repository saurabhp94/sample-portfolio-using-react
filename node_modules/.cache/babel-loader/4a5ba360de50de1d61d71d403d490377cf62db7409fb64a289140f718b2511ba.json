{"ast":null,"code":"\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport InputGroupText from './InputGroupText';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\nconst InputGroup = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    bsPrefix,\n    size,\n    hasValidation,\n    className,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    ...props\n  } = _ref;\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n\n  // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && \"\".concat(bsPrefix, \"-\").concat(size), hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});","map":{"version":3,"names":["classNames","React","useMemo","useBootstrapPrefix","FormCheckInput","InputGroupContext","InputGroupText","jsx","_jsx","InputGroupCheckbox","props","children","type","InputGroupRadio","InputGroup","forwardRef","_ref","ref","bsPrefix","size","hasValidation","className","as","Component","contextValue","Provider","value","concat","displayName","Object","assign","Text","Radio","Checkbox"],"sources":["/Users/saurabhpatel/sample-portfolio-using-react/node_modules/react-bootstrap/esm/InputGroup.js"],"sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport InputGroupText from './InputGroupText';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n\n  // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});"],"mappings":"AAAA,YAAY;;AAEZ,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,kBAAkB,QAAQ,iBAAiB;AACpD,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,MAAMC,kBAAkB,GAAGC,KAAK,IAAI,aAAaF,IAAI,CAACF,cAAc,EAAE;EACpEK,QAAQ,EAAE,aAAaH,IAAI,CAACJ,cAAc,EAAE;IAC1CQ,IAAI,EAAE,UAAU;IAChB,GAAGF;EACL,CAAC;AACH,CAAC,CAAC;AACF,MAAMG,eAAe,GAAGH,KAAK,IAAI,aAAaF,IAAI,CAACF,cAAc,EAAE;EACjEK,QAAQ,EAAE,aAAaH,IAAI,CAACJ,cAAc,EAAE;IAC1CQ,IAAI,EAAE,OAAO;IACb,GAAGF;EACL,CAAC;AACH,CAAC,CAAC;AACF,MAAMI,UAAU,GAAG,aAAab,KAAK,CAACc,UAAU,CAAC,CAAAC,IAAA,EAQ9CC,GAAG,KAAK;EAAA,IARuC;IAChDC,QAAQ;IACRC,IAAI;IACJC,aAAa;IACbC,SAAS;IACT;IACAC,EAAE,EAAEC,SAAS,GAAG,KAAK;IACrB,GAAGb;EACL,CAAC,GAAAM,IAAA;EACCE,QAAQ,GAAGf,kBAAkB,CAACe,QAAQ,EAAE,aAAa,CAAC;;EAEtD;EACA;EACA,MAAMM,YAAY,GAAGtB,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;EAC5C,OAAO,aAAaM,IAAI,CAACH,iBAAiB,CAACoB,QAAQ,EAAE;IACnDC,KAAK,EAAEF,YAAY;IACnBb,QAAQ,EAAE,aAAaH,IAAI,CAACe,SAAS,EAAE;MACrCN,GAAG,EAAEA,GAAG;MACR,GAAGP,KAAK;MACRW,SAAS,EAAErB,UAAU,CAACqB,SAAS,EAAEH,QAAQ,EAAEC,IAAI,OAAAQ,MAAA,CAAOT,QAAQ,OAAAS,MAAA,CAAIR,IAAI,CAAE,EAAEC,aAAa,IAAI,gBAAgB;IAC7G,CAAC;EACH,CAAC,CAAC;AACJ,CAAC,CAAC;AACFN,UAAU,CAACc,WAAW,GAAG,YAAY;AACrC,eAAeC,MAAM,CAACC,MAAM,CAAChB,UAAU,EAAE;EACvCiB,IAAI,EAAEzB,cAAc;EACpB0B,KAAK,EAAEnB,eAAe;EACtBoB,QAAQ,EAAExB;AACZ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}