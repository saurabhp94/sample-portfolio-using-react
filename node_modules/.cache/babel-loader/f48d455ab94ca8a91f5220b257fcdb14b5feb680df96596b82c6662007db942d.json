{"ast":null,"code":"var _jsxFileName = \"/Users/saurabhpatel/self-learn-react/src/components/NavigationBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport endpoints from \"../constants/endpoints\";\nimport FallbackSpinner from \"./FallbackSpinner\";\nimport Switch from \"../theme/Switch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavBar = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [prevScrollPos, setPrevScrollPos] = useState(window.scrollY);\n  const [activeLink, setActiveLink] = useState(\"\");\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(endpoints.navbar, {\n          method: \"GET\"\n        });\n        const res = await response.json();\n        setData(res);\n      } catch (err) {\n        console.error(\"Navbar fetch Error\", err);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const handleScroll = () => {\n      const currentScrollPos = window.scrollY;\n      const navbar = document.querySelector(\".navbar\");\n      if (navbar) {\n        if (prevScrollPos > currentScrollPos) {\n          navbar.style.transform = \"translateY(0%)\";\n        } else {\n          navbar.style.transform = \"translateY(-200%)\";\n        }\n        setPrevScrollPos(currentScrollPos);\n      }\n      const sections = document.querySelectorAll('div[id^=\"/\"]');\n      let activeSection = '';\n      for (const section of sections) {\n        if (section && section.getBoundingClientRect) {\n          const sectionTop = section.getBoundingClientRect().top + window.scrollY - 100;\n          const sectionBottom = sectionTop + section.offsetHeight;\n          const isInViewport = currentScrollPos >= sectionTop && currentScrollPos <= sectionBottom;\n          if (isInViewport) {\n            activeSection = section.id;\n            break;\n          }\n        }\n      }\n      setActiveLink(activeSection);\n      console.log(`Current section in viewport: ${activeSection}`);\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, [prevScrollPos, data, setActiveLink]);\n  const scrollTo = (e, sectionID) => {\n    e.preventDefault();\n    const section = document.getElementById(sectionID);\n    if (section) {\n      section.scrollIntoView({\n        behavior: \"smooth\",\n        block: 'start'\n      });\n      setActiveLink(sectionID);\n    }\n  };\n  return data ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar\",\n    children: data.sections.map((link, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav_items\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: link.href,\n            className: activeLink === link.href ? \"active\" : \"\",\n            onClick: e => scrollTo(e, link.href),\n            children: link.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, link.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(FallbackSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n_s(NavBar, \"rLNLkRWv8t11kVN8+WB/rmpCIlY=\");\n_c = NavBar;\nexport default NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["React","useState","useEffect","endpoints","FallbackSpinner","Switch","jsxDEV","_jsxDEV","NavBar","_s","data","setData","prevScrollPos","setPrevScrollPos","window","scrollY","activeLink","setActiveLink","isMenuOpen","setIsMenuOpen","fetchData","response","fetch","navbar","method","res","json","err","console","error","handleScroll","currentScrollPos","document","querySelector","style","transform","sections","querySelectorAll","activeSection","section","getBoundingClientRect","sectionTop","top","sectionBottom","offsetHeight","isInViewport","id","log","addEventListener","removeEventListener","scrollTo","e","sectionID","preventDefault","getElementById","scrollIntoView","behavior","block","className","children","map","link","index","href","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/saurabhpatel/self-learn-react/src/components/NavigationBar.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport endpoints from \"../constants/endpoints\";\nimport FallbackSpinner from \"./FallbackSpinner\";\nimport Switch from \"../theme/Switch\";\nconst NavBar = () => {\n    const [data, setData] = useState(null);\n    const [prevScrollPos, setPrevScrollPos] = useState(window.scrollY);\n    const [activeLink, setActiveLink] = useState(\"\");\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await fetch(endpoints.navbar, { method: \"GET\" });\n                const res = await response.json();\n                setData(res);\n            } catch (err) {\n                console.error(\"Navbar fetch Error\", err);\n            }\n        };\n        fetchData();\n    }, []);\n    useEffect(() => {\n        const handleScroll = () => {\n            const currentScrollPos = window.scrollY;\n            const navbar = document.querySelector(\".navbar\");\n            if (navbar) {\n                if (prevScrollPos > currentScrollPos) {\n                    navbar.style.transform = \"translateY(0%)\";\n                } else {\n                    navbar.style.transform = \"translateY(-200%)\";\n                }\n                setPrevScrollPos(currentScrollPos);\n            }\n\n            const sections = document.querySelectorAll('div[id^=\"/\"]');\n            let activeSection = '';\n            for (const section of sections) {\n                if (section && section.getBoundingClientRect) {\n                    const sectionTop = section.getBoundingClientRect().top + window.scrollY - 100;\n                    const sectionBottom = sectionTop + section.offsetHeight;\n                    const isInViewport = currentScrollPos >= sectionTop && currentScrollPos <= sectionBottom;\n                    if (isInViewport) {\n                        activeSection = section.id;\n                        break;\n                    }\n                }\n            }\n\n            setActiveLink(activeSection);\n            console.log(`Current section in viewport: ${activeSection}`);\n        };\n        window.addEventListener(\"scroll\", handleScroll);\n        return () => window.removeEventListener(\"scroll\", handleScroll);\n    }, [prevScrollPos, data, setActiveLink]);\n\n    const scrollTo = (e, sectionID) => {\n        e.preventDefault();\n        const section = document.getElementById(sectionID);\n        if (section) {\n            section.scrollIntoView({ behavior: \"smooth\", block: 'start'  });\n            setActiveLink(sectionID);\n        }\n    };\n    return data ? (\n        <div className=\"navbar\">\n            {data.sections.map((link, index) => (\n                <div key={index} className=\"nav_items\">\n                <ul key={link.title}>\n                    <li>\n                        <a \n                        href={link.href}\n                        className={activeLink === link.href ? \"active\" : \"\"}\n                        onClick={(e) => scrollTo(e, link.href)}\n                        >\n                            {link.title}\n                            </a>\n                    </li>\n                </ul>\n                </div>\n                \n            ))}\n        </div>\n    ) : (\n        <FallbackSpinner />\n    );\n};\nexport default NavBar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}