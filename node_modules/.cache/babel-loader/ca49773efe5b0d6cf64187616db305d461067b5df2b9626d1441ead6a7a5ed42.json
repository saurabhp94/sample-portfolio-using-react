{"ast":null,"code":"\"use client\";\n\nimport * as React from 'react';\nimport { useEffect, useMemo, useRef, useCallback } from 'react';\nimport classNames from 'classnames';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport ToastFade from './ToastFade';\nimport ToastHeader from './ToastHeader';\nimport ToastBody from './ToastBody';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ToastContext from './ToastContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Toast = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    bsPrefix,\n    className,\n    transition: Transition = ToastFade,\n    show = true,\n    animation = true,\n    delay = 5000,\n    autohide = false,\n    onClose,\n    onEntered,\n    onExit,\n    onExiting,\n    onEnter,\n    onEntering,\n    onExited,\n    bg,\n    ...props\n  } = _ref;\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast');\n\n  // We use refs for these, because we don't want to restart the autohide\n  // timer in case these values change.\n  const delayRef = useRef(delay);\n  const onCloseRef = useRef(onClose);\n  useEffect(() => {\n    delayRef.current = delay;\n    onCloseRef.current = onClose;\n  }, [delay, onClose]);\n  const autohideTimeout = useTimeout();\n  const autohideToast = !!(autohide && show);\n  const autohideFunc = useCallback(() => {\n    if (autohideToast) {\n      onCloseRef.current == null ? void 0 : onCloseRef.current();\n    }\n  }, [autohideToast]);\n  useEffect(() => {\n    // Only reset timer if show or autohide changes.\n    autohideTimeout.set(autohideFunc, delayRef.current);\n  }, [autohideTimeout, autohideFunc]);\n  const toastContext = useMemo(() => ({\n    onClose\n  }), [onClose]);\n  const hasAnimation = !!(Transition && animation);\n  const toast = /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(bsPrefix, className, bg && \"bg-\".concat(bg), !hasAnimation && (show ? 'show' : 'hide')),\n    role: \"alert\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\"\n  });\n  return /*#__PURE__*/_jsx(ToastContext.Provider, {\n    value: toastContext,\n    children: hasAnimation && Transition ? /*#__PURE__*/_jsx(Transition, {\n      in: show,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: onExited,\n      unmountOnExit: true,\n      children: toast\n    }) : toast\n  });\n});\nToast.displayName = 'Toast';\nexport default Object.assign(Toast, {\n  Body: ToastBody,\n  Header: ToastHeader\n});","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useCallback","classNames","useTimeout","ToastFade","ToastHeader","ToastBody","useBootstrapPrefix","ToastContext","jsx","_jsx","Toast","forwardRef","_ref","ref","bsPrefix","className","transition","Transition","show","animation","delay","autohide","onClose","onEntered","onExit","onExiting","onEnter","onEntering","onExited","bg","props","delayRef","onCloseRef","current","autohideTimeout","autohideToast","autohideFunc","set","toastContext","hasAnimation","toast","concat","role","Provider","value","children","in","unmountOnExit","displayName","Object","assign","Body","Header"],"sources":["/Users/saurabhpatel/sample-portfolio-using-react/node_modules/react-bootstrap/esm/Toast.js"],"sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport { useEffect, useMemo, useRef, useCallback } from 'react';\nimport classNames from 'classnames';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport ToastFade from './ToastFade';\nimport ToastHeader from './ToastHeader';\nimport ToastBody from './ToastBody';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ToastContext from './ToastContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Toast = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  transition: Transition = ToastFade,\n  show = true,\n  animation = true,\n  delay = 5000,\n  autohide = false,\n  onClose,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  bg,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast');\n\n  // We use refs for these, because we don't want to restart the autohide\n  // timer in case these values change.\n  const delayRef = useRef(delay);\n  const onCloseRef = useRef(onClose);\n  useEffect(() => {\n    delayRef.current = delay;\n    onCloseRef.current = onClose;\n  }, [delay, onClose]);\n  const autohideTimeout = useTimeout();\n  const autohideToast = !!(autohide && show);\n  const autohideFunc = useCallback(() => {\n    if (autohideToast) {\n      onCloseRef.current == null ? void 0 : onCloseRef.current();\n    }\n  }, [autohideToast]);\n  useEffect(() => {\n    // Only reset timer if show or autohide changes.\n    autohideTimeout.set(autohideFunc, delayRef.current);\n  }, [autohideTimeout, autohideFunc]);\n  const toastContext = useMemo(() => ({\n    onClose\n  }), [onClose]);\n  const hasAnimation = !!(Transition && animation);\n  const toast = /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(bsPrefix, className, bg && `bg-${bg}`, !hasAnimation && (show ? 'show' : 'hide')),\n    role: \"alert\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\"\n  });\n  return /*#__PURE__*/_jsx(ToastContext.Provider, {\n    value: toastContext,\n    children: hasAnimation && Transition ? /*#__PURE__*/_jsx(Transition, {\n      in: show,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: onExited,\n      unmountOnExit: true,\n      children: toast\n    }) : toast\n  });\n});\nToast.displayName = 'Toast';\nexport default Object.assign(Toast, {\n  Body: ToastBody,\n  Header: ToastHeader\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}