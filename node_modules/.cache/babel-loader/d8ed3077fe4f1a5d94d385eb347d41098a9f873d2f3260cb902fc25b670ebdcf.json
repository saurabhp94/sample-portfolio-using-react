{"ast":null,"code":"var _jsxFileName = \"/Users/saurabhpatel/sample-portfolio-using-react/src/components/NavigationBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport endpoints from \"../constants/endpoints\";\nimport FallbackSpinner from \"./FallbackSpinner\";\nimport Switch from \"../theme/Switch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavBar = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [prevScrollPos, setPrevScrollPos] = useState(window.scrollY);\n  const [activeLink, setActiveLink] = useState(\"\");\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(endpoints.navbar, {\n          method: \"GET\"\n        });\n        const res = await response.json();\n        setData(res);\n      } catch (err) {\n        console.error(\"Navbar fetch Error\", err);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const handleScroll = () => {\n      const currentScrollPos = window.scrollY;\n      const navbar = document.querySelector(\".navbar\");\n      const navlinks = d;\n      if (navbar) {\n        if (prevScrollPos > currentScrollPos) {\n          navbar.style.transform = \"translateY(0%)\";\n        } else {\n          navbar.style.transform = \"translateY(-200%)\";\n        }\n        setPrevScrollPos(currentScrollPos);\n      }\n      const sections = document.querySelectorAll('div[id^=\"/\"]');\n      let activeSection = '';\n      for (const section of sections) {\n        if (section && section.getBoundingClientRect) {\n          const sectionTop = section.getBoundingClientRect().top + window.scrollY - 100;\n          const sectionBottom = sectionTop + section.offsetHeight;\n          const isInViewport = currentScrollPos >= sectionTop && currentScrollPos <= sectionBottom;\n          if (isInViewport) {\n            activeSection = section.id;\n            break;\n          }\n        }\n      }\n      setActiveLink(activeSection);\n      console.log(`Current section in viewport: ${activeSection}`);\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, [prevScrollPos, data, setActiveLink]);\n  const scrollTo = (e, sectionID) => {\n    e.preventDefault();\n    const section = document.getElementById(sectionID);\n    if (section) {\n      section.scrollIntoView({\n        behavior: \"smooth\",\n        block: 'start'\n      });\n      setActiveLink(sectionID);\n    }\n  };\n  return data ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hamburger\",\n      onClick: toggleMenu,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `hamburger-line ${isMenuOpen ? 'open' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `hamburger-line ${isMenuOpen ? 'open' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `hamburger-line ${isMenuOpen ? 'open' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `nav-links ${isMenuOpen ? 'open' : ''}`,\n      children: data.sections.map((link, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav_items\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: link.href,\n              className: activeLink === link.href ? \"active\" : \"\",\n              onClick: e => {\n                scrollTo(e, link.href);\n                // Close the menu on small screens\n                if (window.innerWidth <= 768) {\n                  toggleMenu();\n                }\n              },\n              children: link.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this)\n        }, link.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"switch\",\n      style: {\n        position: \"absolute\",\n        right: \"10px\",\n        top: \"1.5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Switch, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(FallbackSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n_s(NavBar, \"rLNLkRWv8t11kVN8+WB/rmpCIlY=\");\n_c = NavBar;\nexport default NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["React","useState","useEffect","endpoints","FallbackSpinner","Switch","jsxDEV","_jsxDEV","NavBar","_s","data","setData","prevScrollPos","setPrevScrollPos","window","scrollY","activeLink","setActiveLink","isMenuOpen","setIsMenuOpen","toggleMenu","fetchData","response","fetch","navbar","method","res","json","err","console","error","handleScroll","currentScrollPos","document","querySelector","navlinks","d","style","transform","sections","querySelectorAll","activeSection","section","getBoundingClientRect","sectionTop","top","sectionBottom","offsetHeight","isInViewport","id","log","addEventListener","removeEventListener","scrollTo","e","sectionID","preventDefault","getElementById","scrollIntoView","behavior","block","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","link","index","href","innerWidth","title","position","right","_c","$RefreshReg$"],"sources":["/Users/saurabhpatel/sample-portfolio-using-react/src/components/NavigationBar.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport endpoints from \"../constants/endpoints\";\nimport FallbackSpinner from \"./FallbackSpinner\";\nimport Switch from \"../theme/Switch\";\n\nconst NavBar = () => {\n    const [data, setData] = useState(null);\n    const [prevScrollPos, setPrevScrollPos] = useState(window.scrollY);\n    const [activeLink, setActiveLink] = useState(\"\");\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n    const toggleMenu = () => {\n        setIsMenuOpen(!isMenuOpen);\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await fetch(endpoints.navbar, { method: \"GET\" });\n                const res = await response.json();\n                setData(res);\n            } catch (err) {\n                console.error(\"Navbar fetch Error\", err);\n            }\n        };\n        fetchData();\n    }, []);\n\n    useEffect(() => {\n        const handleScroll = () => {\n            const currentScrollPos = window.scrollY;\n            const navbar = document.querySelector(\".navbar\");\n            const navlinks = d\n            if (navbar) {\n                if (prevScrollPos > currentScrollPos) {\n                    navbar.style.transform = \"translateY(0%)\";\n                } else {\n                    navbar.style.transform = \"translateY(-200%)\";\n                }\n                setPrevScrollPos(currentScrollPos);\n            }\n            const sections = document.querySelectorAll('div[id^=\"/\"]');\n            let activeSection = '';\n            for (const section of sections) {\n                if (section && section.getBoundingClientRect) {\n                    const sectionTop = section.getBoundingClientRect().top + window.scrollY - 100;\n                    const sectionBottom = sectionTop + section.offsetHeight;\n                    const isInViewport = currentScrollPos >= sectionTop && currentScrollPos <= sectionBottom;\n                    if (isInViewport) {\n                        activeSection = section.id;\n                        break;\n                    }\n                }\n            }\n            setActiveLink(activeSection);\n            console.log(`Current section in viewport: ${activeSection}`);\n        };\n        window.addEventListener(\"scroll\", handleScroll);\n        return () => window.removeEventListener(\"scroll\", handleScroll);\n    }, [prevScrollPos, data, setActiveLink]);\n\n    const scrollTo = (e, sectionID) => {\n        e.preventDefault();\n        const section = document.getElementById(sectionID);\n        if (section) {\n            section.scrollIntoView({ behavior: \"smooth\", block: 'start' });\n            setActiveLink(sectionID);\n        }\n    };\n\n    return data ? (\n        <div className=\"navbar\">\n            <div className=\"hamburger\" onClick={toggleMenu}>\n                <span className={`hamburger-line ${isMenuOpen ? 'open' : ''}`}></span>\n                <span className={`hamburger-line ${isMenuOpen ? 'open' : ''}`}></span>\n                <span className={`hamburger-line ${isMenuOpen ? 'open' : ''}`}></span>\n            </div>\n            <div className={`nav-links ${isMenuOpen ? 'open' : ''}`}>\n                {data.sections.map((link, index) => (\n                    <div key={index} className=\"nav_items\">\n                        <ul key={link.title}>\n                            <li>\n                                <a\n                                    href={link.href}\n                                    className={activeLink === link.href ? \"active\" : \"\"}\n                                    onClick={(e) => {\n                                        scrollTo(e, link.href);\n                                        // Close the menu on small screens\n                                        if (window.innerWidth <= 768) {\n                                            toggleMenu();\n                                        }\n                                    }}\n                                >\n                                    {link.title}\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                ))}\n            </div>\n            <div className=\"switch\"\n                style={{ position: \"absolute\", right: \"10px\", top: \"1.5px\" }}>\n            <Switch />\n            </div>\n        </div>\n    ) : (\n        <FallbackSpinner />\n    );\n};\n\nexport default NavBar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,MAAM,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAACa,MAAM,CAACC,OAAO,CAAC;EAClE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMmB,UAAU,GAAGA,CAAA,KAAM;IACrBD,aAAa,CAAC,CAACD,UAAU,CAAC;EAC9B,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACZ,MAAMmB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACpB,SAAS,CAACqB,MAAM,EAAE;UAAEC,MAAM,EAAE;QAAM,CAAC,CAAC;QACjE,MAAMC,GAAG,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QACjChB,OAAO,CAACe,GAAG,CAAC;MAChB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEF,GAAG,CAAC;MAC5C;IACJ,CAAC;IACDP,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAENnB,SAAS,CAAC,MAAM;IACZ,MAAM6B,YAAY,GAAGA,CAAA,KAAM;MACvB,MAAMC,gBAAgB,GAAGlB,MAAM,CAACC,OAAO;MACvC,MAAMS,MAAM,GAAGS,QAAQ,CAACC,aAAa,CAAC,SAAS,CAAC;MAChD,MAAMC,QAAQ,GAAGC,CAAC;MAClB,IAAIZ,MAAM,EAAE;QACR,IAAIZ,aAAa,GAAGoB,gBAAgB,EAAE;UAClCR,MAAM,CAACa,KAAK,CAACC,SAAS,GAAG,gBAAgB;QAC7C,CAAC,MAAM;UACHd,MAAM,CAACa,KAAK,CAACC,SAAS,GAAG,mBAAmB;QAChD;QACAzB,gBAAgB,CAACmB,gBAAgB,CAAC;MACtC;MACA,MAAMO,QAAQ,GAAGN,QAAQ,CAACO,gBAAgB,CAAC,cAAc,CAAC;MAC1D,IAAIC,aAAa,GAAG,EAAE;MACtB,KAAK,MAAMC,OAAO,IAAIH,QAAQ,EAAE;QAC5B,IAAIG,OAAO,IAAIA,OAAO,CAACC,qBAAqB,EAAE;UAC1C,MAAMC,UAAU,GAAGF,OAAO,CAACC,qBAAqB,CAAC,CAAC,CAACE,GAAG,GAAG/B,MAAM,CAACC,OAAO,GAAG,GAAG;UAC7E,MAAM+B,aAAa,GAAGF,UAAU,GAAGF,OAAO,CAACK,YAAY;UACvD,MAAMC,YAAY,GAAGhB,gBAAgB,IAAIY,UAAU,IAAIZ,gBAAgB,IAAIc,aAAa;UACxF,IAAIE,YAAY,EAAE;YACdP,aAAa,GAAGC,OAAO,CAACO,EAAE;YAC1B;UACJ;QACJ;MACJ;MACAhC,aAAa,CAACwB,aAAa,CAAC;MAC5BZ,OAAO,CAACqB,GAAG,CAAC,gCAAgCT,aAAa,EAAE,CAAC;IAChE,CAAC;IACD3B,MAAM,CAACqC,gBAAgB,CAAC,QAAQ,EAAEpB,YAAY,CAAC;IAC/C,OAAO,MAAMjB,MAAM,CAACsC,mBAAmB,CAAC,QAAQ,EAAErB,YAAY,CAAC;EACnE,CAAC,EAAE,CAACnB,aAAa,EAAEF,IAAI,EAAEO,aAAa,CAAC,CAAC;EAExC,MAAMoC,QAAQ,GAAGA,CAACC,CAAC,EAAEC,SAAS,KAAK;IAC/BD,CAAC,CAACE,cAAc,CAAC,CAAC;IAClB,MAAMd,OAAO,GAAGT,QAAQ,CAACwB,cAAc,CAACF,SAAS,CAAC;IAClD,IAAIb,OAAO,EAAE;MACTA,OAAO,CAACgB,cAAc,CAAC;QAAEC,QAAQ,EAAE,QAAQ;QAAEC,KAAK,EAAE;MAAQ,CAAC,CAAC;MAC9D3C,aAAa,CAACsC,SAAS,CAAC;IAC5B;EACJ,CAAC;EAED,OAAO7C,IAAI,gBACPH,OAAA;IAAKsD,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACnBvD,OAAA;MAAKsD,SAAS,EAAC,WAAW;MAACE,OAAO,EAAE3C,UAAW;MAAA0C,QAAA,gBAC3CvD,OAAA;QAAMsD,SAAS,EAAE,kBAAkB3C,UAAU,GAAG,MAAM,GAAG,EAAE;MAAG;QAAA8C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtE5D,OAAA;QAAMsD,SAAS,EAAE,kBAAkB3C,UAAU,GAAG,MAAM,GAAG,EAAE;MAAG;QAAA8C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtE5D,OAAA;QAAMsD,SAAS,EAAE,kBAAkB3C,UAAU,GAAG,MAAM,GAAG,EAAE;MAAG;QAAA8C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CAAC,eACN5D,OAAA;MAAKsD,SAAS,EAAE,aAAa3C,UAAU,GAAG,MAAM,GAAG,EAAE,EAAG;MAAA4C,QAAA,EACnDpD,IAAI,CAAC6B,QAAQ,CAAC6B,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC3B/D,OAAA;QAAiBsD,SAAS,EAAC,WAAW;QAAAC,QAAA,eAClCvD,OAAA;UAAAuD,QAAA,eACIvD,OAAA;YAAAuD,QAAA,eACIvD,OAAA;cACIgE,IAAI,EAAEF,IAAI,CAACE,IAAK;cAChBV,SAAS,EAAE7C,UAAU,KAAKqD,IAAI,CAACE,IAAI,GAAG,QAAQ,GAAG,EAAG;cACpDR,OAAO,EAAGT,CAAC,IAAK;gBACZD,QAAQ,CAACC,CAAC,EAAEe,IAAI,CAACE,IAAI,CAAC;gBACtB;gBACA,IAAIzD,MAAM,CAAC0D,UAAU,IAAI,GAAG,EAAE;kBAC1BpD,UAAU,CAAC,CAAC;gBAChB;cACJ,CAAE;cAAA0C,QAAA,EAEDO,IAAI,CAACI;YAAK;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACZ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ;QAAC,GAfAE,IAAI,CAACI,KAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAgBf;MAAC,GAjBCG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAkBV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACN5D,OAAA;MAAKsD,SAAS,EAAC,QAAQ;MACnBxB,KAAK,EAAE;QAAEqC,QAAQ,EAAE,UAAU;QAAEC,KAAK,EAAE,MAAM;QAAE9B,GAAG,EAAE;MAAQ,CAAE;MAAAiB,QAAA,eACjEvD,OAAA,CAACF,MAAM;QAAA2D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC,gBAEN5D,OAAA,CAACH,eAAe;IAAA4D,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CACrB;AACL,CAAC;AAAC1D,EAAA,CAvGID,MAAM;AAAAoE,EAAA,GAANpE,MAAM;AAyGZ,eAAeA,MAAM;AAAC,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}