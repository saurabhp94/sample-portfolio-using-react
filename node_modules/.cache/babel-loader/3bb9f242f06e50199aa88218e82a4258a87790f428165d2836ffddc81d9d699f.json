{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import Header from\"./Header\";import endpoints from\"../constants/endpoints\";import FallbackSpinner from\"./FallbackSpinner\";import DefaultContainers from\"./containers/DefaultContainers\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Certifications=props=>{const[data,setData]=useState(null);const{header}=props;useEffect(()=>{const fetchData=async()=>{try{const response=await fetch(endpoints.certifications,{method:\"GET\"});const res=await response.json();setData(res);}catch(err){console.error(\"Certifications fetch Error\",err);}};fetchData();},[]);return data?/*#__PURE__*/_jsxs(\"div\",{id:\"/certifications\",children:[/*#__PURE__*/_jsx(Header,{title:header}),/*#__PURE__*/_jsx(\"div\",{className:\"parent-container\",children:data&&data.certifications.map((cert,index)=>{return/*#__PURE__*/_jsx(DefaultContainers,{sectionType:cert},index);})})]}):/*#__PURE__*/_jsx(FallbackSpinner,{});};export default Certifications;","map":{"version":3,"names":["React","useState","useEffect","Header","endpoints","FallbackSpinner","DefaultContainers","jsx","_jsx","jsxs","_jsxs","Certifications","props","data","setData","header","fetchData","response","fetch","certifications","method","res","json","err","console","error","id","children","title","className","map","cert","index","sectionType"],"sources":["/Users/saurabhpatel/sample-portfolio-using-react/src/components/Certifications.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport endpoints from \"../constants/endpoints\";\nimport FallbackSpinner from \"./FallbackSpinner\";\nimport DefaultContainers from \"./containers/DefaultContainers\";\n\nconst Certifications = (props) => {\n    const [data, setData] = useState(null);\n    const {header}= props;\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await fetch(endpoints.certifications, { method: \"GET\" });\n                const res = await response.json();\n                setData(res);\n            } catch (err) {\n                console.error(\"Certifications fetch Error\", err);\n            }\n        };\n        fetchData();\n    }, []);\n    return (\n        data? (\n            <div id=\"/certifications\">\n                <Header title={header} />\n                <div className=\"parent-container\">\n                {data && data.certifications.map((cert, index) => {\n                    return (\n                        <DefaultContainers\n                            key={index}\n                            sectionType={cert}\n                        />\n                    );\n                })}\n                </div>\n            </div>\n        ) : (\n            <FallbackSpinner />\n        )\n    );\n};\n\nexport default Certifications;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,MAAM,KAAM,UAAU,CAC7B,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAC/C,MAAO,CAAAC,iBAAiB,KAAM,gCAAgC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/D,KAAM,CAAAC,cAAc,CAAIC,KAAK,EAAK,CAC9B,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACc,MAAM,CAAC,CAAEH,KAAK,CAErBV,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAc,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC1B,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACd,SAAS,CAACe,cAAc,CAAE,CAAEC,MAAM,CAAE,KAAM,CAAC,CAAC,CACzE,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CACjCR,OAAO,CAACO,GAAG,CAAC,CAChB,CAAE,MAAOE,GAAG,CAAE,CACVC,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAEF,GAAG,CAAC,CACpD,CACJ,CAAC,CACDP,SAAS,CAAC,CAAC,CACf,CAAC,CAAE,EAAE,CAAC,CACN,MACI,CAAAH,IAAI,cACAH,KAAA,QAAKgB,EAAE,CAAC,iBAAiB,CAAAC,QAAA,eACrBnB,IAAA,CAACL,MAAM,EAACyB,KAAK,CAAEb,MAAO,CAAE,CAAC,cACzBP,IAAA,QAAKqB,SAAS,CAAC,kBAAkB,CAAAF,QAAA,CAChCd,IAAI,EAAIA,IAAI,CAACM,cAAc,CAACW,GAAG,CAAC,CAACC,IAAI,CAAEC,KAAK,GAAK,CAC9C,mBACIxB,IAAA,CAACF,iBAAiB,EAEd2B,WAAW,CAAEF,IAAK,EADbC,KAER,CAAC,CAEV,CAAC,CAAC,CACG,CAAC,EACL,CAAC,cAENxB,IAAA,CAACH,eAAe,GAAE,CACrB,CAET,CAAC,CAED,cAAe,CAAAM,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}