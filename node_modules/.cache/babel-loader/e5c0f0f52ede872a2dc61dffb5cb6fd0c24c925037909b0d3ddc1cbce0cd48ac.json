{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import endpoints from \"../constants/endpoints\";\n// import FallbackSpinner from \"./FallbackSpinner\";\n\n// const NavBar = () => {\n//     const [data, setData] = useState(null);\n//     const [prevScrollPos, setPrevScrollPos] = useState(window.scrollY);\n\n//     useEffect(() => {\n//         const fetchData = async () => {\n//             try {\n//                 const response = await fetch(endpoints.navbar, { method: \"GET\" });\n//                 const res = await response.json();\n//                 setData(res);\n//             } catch (err) {\n//                 console.error(\"Navbar fetch Error\", err);\n//             }\n//         };\n//         fetchData();\n//     }, []);\n\n//     useEffect(() => {\n//         const handleScroll = () => {\n//             const currentScrollPos = window.scrollY;\n//             const navbar = document.querySelector(\".navbar\");\n//             if (navbar) {\n//                 if (prevScrollPos > currentScrollPos) {\n//                     navbar.style.transform = \"translateY(0%)\";\n//                 } else {\n//                     navbar.style.transform = \"translateY(-200%)\";\n//                 }\n//                 setPrevScrollPos(currentScrollPos);\n//             }\n//         };\n\n//         window.addEventListener(\"scroll\", handleScroll);\n//         return () => window.removeEventListener(\"scroll\", handleScroll);\n//     }, [prevScrollPos]);\n\n//     return data ? (\n//         <div className=\"navbar\">\n//             {data.sections.map((link, index) => (\n//                 <ul key={index}>\n//                     <li>\n//                         <a href={link.href}>{link.title}</a>\n//                     </li>\n//                 </ul>\n//             ))}\n//         </div>\n//     ) : (\n//         <FallbackSpinner />\n//     );\n// };\n\n// export default NavBar;","map":{"version":3,"names":[],"sources":["/Users/saurabhpatel/self-learn-react/src/components/NavigationBar.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import endpoints from \"../constants/endpoints\";\n// import FallbackSpinner from \"./FallbackSpinner\";\n\n// const NavBar = () => {\n//     const [data, setData] = useState(null);\n//     const [prevScrollPos, setPrevScrollPos] = useState(window.scrollY);\n\n//     useEffect(() => {\n//         const fetchData = async () => {\n//             try {\n//                 const response = await fetch(endpoints.navbar, { method: \"GET\" });\n//                 const res = await response.json();\n//                 setData(res);\n//             } catch (err) {\n//                 console.error(\"Navbar fetch Error\", err);\n//             }\n//         };\n//         fetchData();\n//     }, []);\n\n//     useEffect(() => {\n//         const handleScroll = () => {\n//             const currentScrollPos = window.scrollY;\n//             const navbar = document.querySelector(\".navbar\");\n//             if (navbar) {\n//                 if (prevScrollPos > currentScrollPos) {\n//                     navbar.style.transform = \"translateY(0%)\";\n//                 } else {\n//                     navbar.style.transform = \"translateY(-200%)\";\n//                 }\n//                 setPrevScrollPos(currentScrollPos);\n//             }\n//         };\n\n//         window.addEventListener(\"scroll\", handleScroll);\n//         return () => window.removeEventListener(\"scroll\", handleScroll);\n//     }, [prevScrollPos]);\n\n//     return data ? (\n//         <div className=\"navbar\">\n//             {data.sections.map((link, index) => (\n//                 <ul key={index}>\n//                     <li>\n//                         <a href={link.href}>{link.title}</a>\n//                     </li>\n//                 </ul>\n//             ))}\n//         </div>\n//     ) : (\n//         <FallbackSpinner />\n//     );\n// };\n\n// export default NavBar;\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}