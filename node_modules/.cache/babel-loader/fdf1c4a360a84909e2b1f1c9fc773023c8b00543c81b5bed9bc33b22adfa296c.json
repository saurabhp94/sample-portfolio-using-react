{"ast":null,"code":"var _jsxFileName = \"/Users/saurabhpatel/self-learn-react/src/theme/ThemeContext.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [theme, setTheme] = useState(localStorage.getItem('theme') || \"light\");\n  const toggleTheme = () => {\n    const newTheme = theme === \"light\" ? \"dark\" : \"light\";\n    setTheme(newTheme);\n    localStorage.setItem('theme', newTheme);\n  };\n  useEffect(() => {\n    const handleSystemThemeChange = () => {\n      const prefersColorScheme = window.matchMedia('(prefers-color-scheme: dark)');\n      setTheme(prefersColorScheme.matches ? 'dark' : 'light'); // Respect system preference initially\n    };\n    window.addEventListener('storage', handleSystemThemeChange); // Listen for theme changes in localStorage\n\n    // Update CSS variables\n    if (theme === 'dark') {\n      document.documentElement.style.setProperty('--background-color', 'black');\n      document.documentElement.style.setProperty('--text-color', 'white');\n    } else {\n      document.documentElement.style.setProperty('--background-color', 'white');\n      document.documentElement.style.setProperty('--text-color', 'black');\n    }\n    return () => {\n      window.removeEventListener('storage', handleSystemThemeChange);\n    };\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n};\n_s(ThemeProvider, \"Bfr2HuzOkvCtDvza4JOTR3M0VgY=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["ThemeProvider","children","_s","theme","setTheme","useState","localStorage","getItem","toggleTheme","newTheme","setItem","useEffect","handleSystemThemeChange","prefersColorScheme","window","matchMedia","matches","addEventListener","document","documentElement","style","setProperty","removeEventListener","_jsxDEV","ThemeContext","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/saurabhpatel/self-learn-react/src/theme/ThemeContext.jsx"],"sourcesContent":["export const ThemeProvider = ({ children }) => {\n    const [theme, setTheme] = useState(localStorage.getItem('theme') || \"light\");\n  \n    const toggleTheme = () => {\n      const newTheme = theme === \"light\" ? \"dark\" : \"light\";\n      setTheme(newTheme);\n      localStorage.setItem('theme', newTheme);\n    };\n  \n    useEffect(() => {\n      const handleSystemThemeChange = () => {\n        const prefersColorScheme = window.matchMedia('(prefers-color-scheme: dark)');\n        setTheme(prefersColorScheme.matches ? 'dark' : 'light'); // Respect system preference initially\n      };\n  \n      window.addEventListener('storage', handleSystemThemeChange); // Listen for theme changes in localStorage\n  \n      // Update CSS variables\n      if (theme === 'dark') {\n        document.documentElement.style.setProperty('--background-color', 'black');\n        document.documentElement.style.setProperty('--text-color', 'white');\n      } else {\n        document.documentElement.style.setProperty('--background-color', 'white');\n        document.documentElement.style.setProperty('--text-color', 'black');\n      }\n  \n      return () => {\n        window.removeEventListener('storage', handleSystemThemeChange);\n      };\n    }, [theme]);\n  \n    return (\n      <ThemeContext.Provider value={{ theme, toggleTheme }}>\n        {children}\n      </ThemeContext.Provider>\n    );\n  }\n  "],"mappings":";;;AAAA,OAAO,MAAMA,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC;EAE5E,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,QAAQ,GAAGN,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IACrDC,QAAQ,CAACK,QAAQ,CAAC;IAClBH,YAAY,CAACI,OAAO,CAAC,OAAO,EAAED,QAAQ,CAAC;EACzC,CAAC;EAEDE,SAAS,CAAC,MAAM;IACd,MAAMC,uBAAuB,GAAGA,CAAA,KAAM;MACpC,MAAMC,kBAAkB,GAAGC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC;MAC5EX,QAAQ,CAACS,kBAAkB,CAACG,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC;IAC3D,CAAC;IAEDF,MAAM,CAACG,gBAAgB,CAAC,SAAS,EAAEL,uBAAuB,CAAC,CAAC,CAAC;;IAE7D;IACA,IAAIT,KAAK,KAAK,MAAM,EAAE;MACpBe,QAAQ,CAACC,eAAe,CAACC,KAAK,CAACC,WAAW,CAAC,oBAAoB,EAAE,OAAO,CAAC;MACzEH,QAAQ,CAACC,eAAe,CAACC,KAAK,CAACC,WAAW,CAAC,cAAc,EAAE,OAAO,CAAC;IACrE,CAAC,MAAM;MACLH,QAAQ,CAACC,eAAe,CAACC,KAAK,CAACC,WAAW,CAAC,oBAAoB,EAAE,OAAO,CAAC;MACzEH,QAAQ,CAACC,eAAe,CAACC,KAAK,CAACC,WAAW,CAAC,cAAc,EAAE,OAAO,CAAC;IACrE;IAEA,OAAO,MAAM;MACXP,MAAM,CAACQ,mBAAmB,CAAC,SAAS,EAAEV,uBAAuB,CAAC;IAChE,CAAC;EACH,CAAC,EAAE,CAACT,KAAK,CAAC,CAAC;EAEX,oBACEoB,OAAA,CAACC,YAAY,CAACC,QAAQ;IAACC,KAAK,EAAE;MAAEvB,KAAK;MAAEK;IAAY,CAAE;IAAAP,QAAA,EAClDA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAA5B,EAAA,CApCUF,aAAa;AAAA+B,EAAA,GAAb/B,aAAa;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}