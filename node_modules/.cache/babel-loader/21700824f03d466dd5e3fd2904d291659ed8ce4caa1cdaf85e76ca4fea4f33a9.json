{"ast":null,"code":"var _jsxFileName = \"/Users/saurabhpatel/self-learn-react/src/components/Experience.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport endpoints from \"../constants/endpoints\";\nimport FallbackSpinner from \"./FallbackSpinner\";\nimport Header from \"./Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimpo;\nconst Experience = props => {\n  _s();\n  const [data, setData] = useState(null);\n  const {\n    header\n  } = props;\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(endpoints.experiences, {\n          method: \"GET\"\n        });\n        const res = await response.json();\n        setData(res);\n      } catch (err) {\n        console.error(\"Experience fetch Error\", err);\n      }\n    };\n    fetchData();\n  }, []);\n  return data ? /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"/experience\",\n    children: /*#__PURE__*/_jsxDEV(Header, {\n      title: header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(FallbackSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 13\n  }, this);\n};\n_s(Experience, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = Experience;\nexport default Experience;\nvar _c;\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"names":["React","useState","useEffect","endpoints","FallbackSpinner","Header","jsxDEV","_jsxDEV","impo","Experience","props","_s","data","setData","header","fetchData","response","fetch","experiences","method","res","json","err","console","error","id","children","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/saurabhpatel/self-learn-react/src/components/Experience.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport endpoints from \"../constants/endpoints\";\nimport FallbackSpinner from \"./FallbackSpinner\";\nimport Header from \"./Header\";\nimpo\n\nconst Experience = (props) => {\n    const [data, setData] = useState(null);\n    const { header } = props;\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await fetch(endpoints.experiences, { method: \"GET\" });\n                const res = await response.json();\n                setData(res);\n            } catch (err) {\n                console.error(\"Experience fetch Error\", err);\n            }\n        };\n        fetchData();\n    }, []);\n\n    return (\n        data ? (\n            <div id=\"/experience\">\n                <Header title={header} />\n                \n            </div>\n        ) : (\n            <FallbackSpinner />\n        )\n    );\n};\n\nexport default Experience;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC9BC,IAAI;AAEJ,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM;IAAEa;EAAO,CAAC,GAAGJ,KAAK;EAExBR,SAAS,CAAC,MAAM;IACZ,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACd,SAAS,CAACe,WAAW,EAAE;UAAEC,MAAM,EAAE;QAAM,CAAC,CAAC;QACtE,MAAMC,GAAG,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QACjCR,OAAO,CAACO,GAAG,CAAC;MAChB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;MAChD;IACJ,CAAC;IACDP,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,OACIH,IAAI,gBACAL,OAAA;IAAKkB,EAAE,EAAC,aAAa;IAAAC,QAAA,eACjBnB,OAAA,CAACF,MAAM;MAACsB,KAAK,EAAEb;IAAO;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAExB,CAAC,gBAENxB,OAAA,CAACH,eAAe;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CACrB;AAET,CAAC;AAACpB,EAAA,CA3BIF,UAAU;AAAAuB,EAAA,GAAVvB,UAAU;AA6BhB,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}