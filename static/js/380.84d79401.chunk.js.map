{"version":3,"file":"static/js/380.84d79401.chunk.js","mappings":"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","sources":["../node_modules/react-vertical-timeline-component/dist-es6/VerticalTimeline.js","../node_modules/react-vertical-timeline-component/dist-es6/VerticalTimelineElement.js","../node_modules/react-vertical-timeline-component/dist-es6/index.js","../node_modules/react-vertical-timeline-component/node_modules/src/observe.ts","../node_modules/react-vertical-timeline-component/node_modules/src/InView.tsx","../node_modules/react-vertical-timeline-component/node_modules/src/useInView.tsx"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst VerticalTimeline = ({\n  animate = true,\n  className = '',\n  layout = '2-columns',\n  lineColor = '#FFF',\n  children\n}) => {\n  if (typeof window === 'object') {\n    document.documentElement.style.setProperty('--line-color', lineColor);\n  }\n\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: (0, _classnames.default)(className, 'vertical-timeline', {\n      'vertical-timeline--animate': animate,\n      'vertical-timeline--two-columns': layout === '2-columns',\n      'vertical-timeline--one-column-left': layout === '1-column' || layout === '1-column-left',\n      'vertical-timeline--one-column-right': layout === '1-column-right'\n    })\n  }, children);\n};\n\nVerticalTimeline.propTypes = {\n  children: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.node), _propTypes.default.node]).isRequired,\n  className: _propTypes.default.string,\n  animate: _propTypes.default.bool,\n  layout: _propTypes.default.oneOf(['1-column-left', '1-column', '2-columns', '1-column-right']),\n  lineColor: _propTypes.default.string\n};\nvar _default = VerticalTimeline;\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _reactIntersectionObserver = require(\"react-intersection-observer\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst VerticalTimelineElement = ({\n  children = '',\n  className = '',\n  contentArrowStyle = null,\n  contentStyle = null,\n  date = '',\n  dateClassName = '',\n  icon = null,\n  iconClassName = '',\n  iconOnClick = null,\n  onTimelineElementClick = null,\n  iconStyle = null,\n  id = '',\n  position = '',\n  style = null,\n  textClassName = '',\n  intersectionObserverProps = {\n    rootMargin: '0px 0px -40px 0px',\n    triggerOnce: true\n  },\n  visible = false\n}) => /*#__PURE__*/_react.default.createElement(_reactIntersectionObserver.InView, intersectionObserverProps, ({\n  inView,\n  ref\n}) => /*#__PURE__*/_react.default.createElement(\"div\", {\n  ref: ref,\n  id: id,\n  className: (0, _classnames.default)(className, 'vertical-timeline-element', {\n    'vertical-timeline-element--left': position === 'left',\n    'vertical-timeline-element--right': position === 'right',\n    'vertical-timeline-element--no-children': children === ''\n  }),\n  style: style\n}, /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(\"span\", {\n  // eslint-disable-line jsx-a11y/no-static-element-interactions\n  style: iconStyle,\n  onClick: iconOnClick,\n  className: (0, _classnames.default)(iconClassName, 'vertical-timeline-element-icon', {\n    'bounce-in': inView || visible,\n    'is-hidden': !(inView || visible)\n  })\n}, icon), /*#__PURE__*/_react.default.createElement(\"div\", {\n  style: contentStyle,\n  onClick: onTimelineElementClick,\n  className: (0, _classnames.default)(textClassName, 'vertical-timeline-element-content', {\n    'bounce-in': inView || visible,\n    'is-hidden': !(inView || visible)\n  })\n}, /*#__PURE__*/_react.default.createElement(\"div\", {\n  style: contentArrowStyle,\n  className: \"vertical-timeline-element-content-arrow\"\n}), children, /*#__PURE__*/_react.default.createElement(\"span\", {\n  className: (0, _classnames.default)(dateClassName, 'vertical-timeline-element-date')\n}, date)))));\n\nVerticalTimelineElement.propTypes = {\n  children: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.node), _propTypes.default.node]),\n  className: _propTypes.default.string,\n  contentArrowStyle: _propTypes.default.shape({}),\n  contentStyle: _propTypes.default.shape({}),\n  date: _propTypes.default.node,\n  dateClassName: _propTypes.default.string,\n  icon: _propTypes.default.element,\n  iconClassName: _propTypes.default.string,\n  iconStyle: _propTypes.default.shape({}),\n  iconOnClick: _propTypes.default.func,\n  onTimelineElementClick: _propTypes.default.func,\n  id: _propTypes.default.string,\n  position: _propTypes.default.string,\n  style: _propTypes.default.shape({}),\n  textClassName: _propTypes.default.string,\n  visible: _propTypes.default.bool,\n  intersectionObserverProps: _propTypes.default.shape({\n    root: _propTypes.default.object,\n    rootMargin: _propTypes.default.string,\n    threshold: _propTypes.default.number,\n    triggerOnce: _propTypes.default.bool\n  })\n};\nvar _default = VerticalTimelineElement;\nexports.default = _default;","\"use strict\";\n\n// this should be the entry point to your library\nmodule.exports = {\n  VerticalTimeline: require('./VerticalTimeline').default,\n  // eslint-disable-line global-require\n  VerticalTimelineElement: require('./VerticalTimelineElement').default // eslint-disable-line global-require\n\n};","import { ObserverInstanceCallback } from './index';\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit['root']) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter((key) => options[key] !== undefined)\n    .map((key) => {\n      return `${key}_${\n        key === 'root' ? getRootId(options.root) : options[key]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === 'undefined' &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from 'react';\nimport { IntersectionObserverProps, PlainChildrenProps } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== 'function';\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  static displayName = 'InView';\n  static defaultProps = {\n    threshold: 0,\n    triggerOnce: false,\n    initialInView: false,\n  };\n\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  }\n\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    if (!isPlainChildren(this.props)) {\n      const { inView, entry } = this.state;\n      return this.props.children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      children,\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props;\n\n    return React.createElement(\n      as || 'div',\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import * as React from 'react';\nimport { InViewHookResponse, IntersectionOptions } from './index';\nimport { useEffect } from 'react';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const unobserve = React.useRef<Function>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n  });\n  const setRef = React.useCallback(\n    (node: Element | null) => {\n      if (unobserve.current !== undefined) {\n        unobserve.current();\n        unobserve.current = undefined;\n      }\n\n      // Skip creating the observer\n      if (skip) return;\n\n      if (node) {\n        unobserve.current = observe(\n          node,\n          (inView, entry) => {\n            setState({ inView, entry });\n\n            if (entry.isIntersecting && triggerOnce && unobserve.current) {\n              // If it should only trigger once, unobserve the element after it's inView\n              unobserve.current();\n              unobserve.current = undefined;\n            }\n          },\n          {\n            root,\n            rootMargin,\n            threshold,\n            // @ts-ignore\n            trackVisibility,\n            // @ts-ignore\n            delay,\n          },\n          fallbackInView,\n        );\n      }\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string so it won't change between renders.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  /* eslint-disable-next-line */\n  useEffect(() => {\n    if (!unobserve.current && state.entry && !triggerOnce && !skip) {\n      // If we don't have a ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n      // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n      setState({\n        inView: !!initialInView,\n      });\n    }\n  });\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n"],"names":["exports","_react","_interopRequireDefault","require","_propTypes","_classnames","obj","__esModule","default","VerticalTimeline","_ref","animate","className","layout","lineColor","children","window","document","documentElement","style","setProperty","createElement","propTypes","oneOfType","arrayOf","node","isRequired","string","bool","oneOf","_default","_reactIntersectionObserver","VerticalTimelineElement","contentArrowStyle","contentStyle","date","dateClassName","icon","iconClassName","iconOnClick","onTimelineElementClick","iconStyle","id","position","textClassName","intersectionObserverProps","rootMargin","triggerOnce","visible","InView","_ref2","inView","ref","Fragment","onClick","shape","element","func","root","object","threshold","number","module","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","undefined","defaultFallbackInView","optionsToId","options","Object","keys","sort","filter","key","map","has","set","toString","get","observe","callback","fallbackInView","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","target","intersectionRatio","time","boundingClientRect","intersectionRect","rootBounds","_createObserver","instance","thresholds","elements","observer","entries","forEach","entry","_elements$get","some","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","push","splice","indexOf","length","unobserve","size","disconnect","isPlainChildren","props","_React$Component","_this","call","_unobserveCb","handleNode","skip","setState","initialInView","observeNode","handleChange","onChange","state","_proto","prototype","componentDidUpdate","prevProps","this","delay","componentWillUnmount","_this$props","render","_this$state","_this$props2","as","_objectWithoutPropertiesLoose","_excluded","React","_extends","useInView","_temp","_React$useState","setRef","current","useEffect","result","displayName","defaultProps"],"sourceRoot":""}