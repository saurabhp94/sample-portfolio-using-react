{"version":3,"file":"static/js/752.4032cb70.chunk.js","mappings":"wNAMA,MA+BA,EA/BoBA,IAChB,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,OAC3B,OAAEC,GAAWJ,EAenB,OAbAK,EAAAA,EAAAA,YAAU,KACYC,WACd,IACI,MAAMC,QAAiBC,MAAMC,EAAAA,EAAUC,YAAa,CAAEC,OAAQ,QACxDC,QAAYL,EAASM,OAC3BX,EAAQU,EACZ,CAAE,MAAOE,GACLC,QAAQC,MAAM,yBAA0BF,EAC5C,GAEJG,EAAW,GACZ,IAGChB,GACIiB,EAAAA,EAAAA,MAAA,OAAKC,GAAG,cAAaC,SAAA,EACjBC,EAAAA,EAAAA,KAACC,EAAAA,QAAM,CAACC,MAAOnB,KACfiB,EAAAA,EAAAA,KAAA,OAAKG,UAAU,qBAAoBJ,UACnCC,EAAAA,EAAAA,KAACI,EAAAA,QAAoB,CAACC,YAAazB,EAAKS,oBAI5CW,EAAAA,EAAAA,KAACM,EAAAA,QAAe,GACnB,C,4ECpBT,QATA,SAAgB3B,GACd,MAAM,MAAEuB,GAAUvB,EAClB,OAAOqB,EAAAA,EAAAA,KAAA,OAAKG,UAAU,SAAQJ,SAAEG,GAClC,C,oGCDA,MA2DA,EA3D8BvB,IAC1B,MAAM,YAAE0B,GAAgB1B,GACjB4B,EAAgBC,IAAqB1B,EAAAA,EAAAA,UAAS,CAAC,IAChD,MAAE2B,IAAUC,EAAAA,EAAAA,KASlB,OACIV,EAAAA,EAAAA,KAACW,EAAAA,iBAAgB,CACbC,SAAS,EACTC,UAAWJ,EAAMI,UAAUd,SAEf,OAAXM,QAAW,IAAXA,OAAW,EAAXA,EAAaS,KAAI,CAACC,EAAMC,KAAW,IAADC,EAC/B,MAAMC,EAAqBH,EAAKI,iBAAmBJ,EAAKI,gBAAgBC,OAAS,EAC3EC,EAAWd,EAAeS,KAAU,EAE1C,OACInB,EAAAA,EAAAA,MAACyB,EAAAA,wBAAuB,CAEpBnB,UAAU,uCACVoB,aAAc,CACVC,WAAW,GAADC,OAAKhB,EAAMiB,gBAAkBC,MAAM,GAADF,OAAKhB,EAAMkB,OACvDC,UAAW,mEACXC,aAAc,QAElBC,kBAAmB,CAAEC,YAAa,sBAClCC,KAAU,OAAJjB,QAAI,IAAJA,OAAI,EAAJA,EAAMkB,SACZC,UAAW,CAAEV,WAAY,UAAWG,MAAO,SAC3CQ,MAAMnC,EAAAA,EAAAA,KAAA,OAAKoC,IAAKrB,EAAKsB,OAAQC,IAAI,GAC7BnC,UAAU,mCAAoCJ,SAAA,EAElDC,EAAAA,EAAAA,KAAA,MAAIG,UAAU,kCAAiCJ,SAAEgB,EAAKwB,aACtDvC,EAAAA,EAAAA,KAAA,MAAIG,UAAU,qCAAoCJ,SAAEgB,EAAKyB,gBACzDxC,EAAAA,EAAAA,KAAA,KAAAD,SAAIgB,EAAK0B,WACRvB,GAAsBG,IACnBrB,EAAAA,EAAAA,KAAA,MAAAD,SACyB,QADzBkB,EACKF,EAAKI,uBAAe,IAAAF,OAAA,EAApBA,EAAsBH,KAAI,CAAC4B,EAAa1B,KAC9BhB,EAAAA,EAAAA,KAAA,MAAAD,SAAiB2C,GAAR1B,OAI3BE,IACGlB,EAAAA,EAAAA,KAAA,UAAQ2C,QAASA,KAAMC,OA1CvBC,EA0CsC7B,OAzC1DR,GAAmBsC,IAAU,IACtBA,EACH,CAACD,IAAaC,EAAWD,OAHTA,KA0C6C,EACzCE,MAAO,CAAEC,OAAQ,UAAWC,gBAAiB,UAAWtB,MAAO,QAASuB,QAAS,WAAYC,WAAY,OAAQtB,aAAc,MAAOuB,UAAW,QAASrD,SACzJsB,EAAW,aAAe,eA1B9BL,EA6BiB,KAGnB,C","sources":["components/Experience.jsx","components/Header.jsx","components/containers/VerticalTimelinecomp.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport endpoints from \"../constants/endpoints\";\nimport FallbackSpinner from \"./FallbackSpinner\";\nimport Header from \"./Header\";\nimport VerticalTimelinecomp from \"./containers/VerticalTimelinecomp\";\n\nconst Experience = (props) => {\n    const [data, setData] = useState(null);\n    const { header } = props;\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await fetch(endpoints.experiences, { method: \"GET\" });\n                const res = await response.json();\n                setData(res);\n            } catch (err) {\n                console.error(\"Experience fetch Error\", err);\n            }\n        };\n        fetchData();\n    }, []);\n\n    return (\n        data ? (\n            <div id=\"/experience\">\n                <Header title={header} />\n                <div className=\"eachSection_height\">\n                <VerticalTimelinecomp sectionType={data.experiences} />\n                </div>\n            </div>\n        ) : (\n            <FallbackSpinner />\n        )\n    );\n};\n\nexport default Experience;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../App.css';\n\nfunction Header(props) {\n  const { title } = props;\n  return <div className=\"header\">{title}</div>;\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;","import React, { useState } from 'react';\nimport { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';\nimport 'react-vertical-timeline-component/style.min.css';\nimport { useTheme } from '../../theme/ThemeContext.jsx'; // Adjusted import path\n\n\nconst VerticalTimelinecomp = (props) => {\n    const { sectionType } = props;\n    const [showMoreStates, setShowMoreStates] = useState({});\n    const { theme } = useTheme();\n\n    const toggleShowMore = (itemIndex) => {\n        setShowMoreStates((prevStates) => ({\n            ...prevStates,\n            [itemIndex]: !prevStates[itemIndex],\n        }));\n    };\n\n    return (\n        <VerticalTimeline\n            animate={true}\n            lineColor={theme.lineColor}\n        >\n            {sectionType?.map((item, index) => {\n                const hasWorkDescription = item.workDescription && item.workDescription.length > 0;\n                const showMore = showMoreStates[index] || false;\n\n                return (\n                    <VerticalTimelineElement\n                        key={index}\n                        className=\"vertical-timeline-element--education\"\n                        contentStyle={{\n                            background: `${theme.tagContainerBg}`, color: `${theme.color}`,\n                            boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n                            borderRadius: '10px'\n                        }}\n                        contentArrowStyle={{ borderRight: '7px solid  #f7f7f7' }}\n                        date={item?.dateText}\n                        iconStyle={{ background: '#f7f7f7', color: 'black' }}\n                        icon={<img src={item.Imgsrc} alt=\"\"\n                            className=\"vertical-timeline-element-icon\" />}\n                    >\n                        <h3 className='vertical-timeline-element-title'>{item.cardtitle}</h3>\n                        <h4 className='vertical-timeline-element-subtitle'>{item.cardsubtitle}</h4>\n                        <p>{item.subtitle}</p>\n                        {hasWorkDescription && showMore && (\n                            <ul>\n                                {item.workDescription?.map((description, index) => {\n                                    return <li key={index}>{description}</li>\n                                })}\n                            </ul>\n                        )}\n                        {hasWorkDescription && (\n                            <button onClick={() => toggleShowMore(index)}\n                                style={{ cursor: \"pointer\", backgroundColor: \"#0f456b\", color: \"white\", padding: \"5px 10px\", fontWeight: \"bold\", borderRadius: \"5px\", marginTop: \"10px\" }}>\n                                {showMore ? '- Collapse' : '+ Expand'}\n                            </button>\n                        )}\n                    </VerticalTimelineElement>\n                )\n            })}\n        </VerticalTimeline>\n    );\n};\n\nexport default VerticalTimelinecomp;"],"names":["props","data","setData","useState","header","useEffect","async","response","fetch","endpoints","experiences","method","res","json","err","console","error","fetchData","_jsxs","id","children","_jsx","Header","title","className","VerticalTimelinecomp","sectionType","FallbackSpinner","showMoreStates","setShowMoreStates","theme","useTheme","VerticalTimeline","animate","lineColor","map","item","index","_item$workDescription","hasWorkDescription","workDescription","length","showMore","VerticalTimelineElement","contentStyle","background","concat","tagContainerBg","color","boxShadow","borderRadius","contentArrowStyle","borderRight","date","dateText","iconStyle","icon","src","Imgsrc","alt","cardtitle","cardsubtitle","subtitle","description","onClick","toggleShowMore","itemIndex","prevStates","style","cursor","backgroundColor","padding","fontWeight","marginTop"],"sourceRoot":""}